/*Напишите запрос для отображения названия отдела и количества сотрудников в каждом из отделов 
	и средней заработной платой в отделе, где средняя ЗП больше 10000 (можете подобрать другое число).
Напишите запрос для отображения полного имени (имени и фамилии), названия должности, даты начала для тех сотрудников, у которых не указан номер телефона. 
Напишите запрос для отображения идентификатора сотрудника, названия должности, в отделе с названием IT, у которых заработная плата более 5000.
Напишите запрос для вывода всех отделов, в которых работают минимум 2 сотрудника, страну и город этих отделов, даже если они пустые.
Напишите запрос, чтобы отобразить название отдела и город, кол-во сотрудников этого отдела и кол-во детей всех сотрудников этого отдела. Внимательнее: у некоторых сотрудников нет детей.
Для каждого сотрудника укажите полное имя, название отдела, город и регион. Отсортируйте по Фамилии сотрудника в обратном порядке.
Написать запрос для вывода полного имени (имени и фамилии) и зарплаты сотрудников и названия всех отделов, расположенных в штате Вашингтон.
Выведите регионы, в которых нет ни одного отдела.
Отобразите полное имя, название отдела, город и регион для всех сотрудников, фамилия которых содержит букву «o».
Для каждого отдела отобразите номер отдела, название отдела, регион и максимальную ЗП в отделе и список сотрудников в виде "Фамилия И." разделенных через запятую.
Придумайте самостоятельно запрос, в двух вариантах с соединением в разделе WHERE и в разделе FROM (итого 2 запроса). Запросы должны быть основаны минимум на 3-х таблицах и включать различные условия.
Придумайте самостоятельно запрос с Right и Left Join одновременно. Запросы должны быть основаны минимум на 3-х таблицах и включать различные условия.*/
--1
SELECT d.department_name, COUNT(e.employee_id) AS count_employees, ROUND(AVG(e.salary), 2) AS avg_salary
FROM departments d LEFT JOIN employees e ON e.department_id = d.department_id
GROUP BY d.department_name
HAVING AVG(e.salary) > 10000
--2
SELECT e.last_name, e.first_name, j.job_title, e.hire_date, e.phone_number
FROM employees e LEFT JOIN jobs j ON j.job_id = e.job_id
WHERE e.phone_number IS NULL
--3
SELECT e.employee_id, j.job_title
FROM employees e JOIN jobs j ON j.job_id = e.job_id JOIN departments d ON d.department_id = e.department_id
WHERE d.department_name = 'IT' AND e.salary > 5000
--4
SELECT d.department_id, l.city, c.country_name, COUNT(e.employee_id)
FROM departments d LEFT JOIN locations l ON d.location_id = l.location_id 
				   LEFT JOIN countries c ON l.country_id = c.country_id
				   LEFT JOIN employees e ON d.department_id = e.department_id
GROUP BY c.country_name, d.department_id, l.city, d.department_name
HAVING COUNT(e.employee_id) >= 2
--5
SELECT d.department_name, l.city, COUNT(DISTINCT e.employee_id) AS count_employees, COUNT(dep.dependent_id) AS count_kids
FROM department d LEFT JOIN locations l ON d.location_id = l.location_id
				LEFT JOIN employees e ON d.department_id = e.department_id
				LEFT JOIN dependents dep ON e.employee_id = dep.employee_id AND dep.relationship = 'Child'
GROUP BY d.department_id, d.department_name, l.city
